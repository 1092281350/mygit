<launch>
  <arg name="mav_name" default="firefly" />
  <arg name="namespace" default="$(arg mav_name)"/>
  <group ns="$(arg namespace)">
    <node name="mav_linear_mpc" pkg="mav_linear_mpc" type="mav_linear_mpc_node" respawn="true" clear_params="true" output="screen">
      <remap from="odometry" to="robot_fuse/odom" />
      <rosparam file="$(find mav_linear_mpc)/resources/linear_mpc_$(arg mav_name).yaml" />
       <!-- <rosparam file="$(find mav_linear_mpc)/resources/linear_mpc_rpyrate_thrust.yaml" /> -->
      <rosparam file="$(find mav_disturbance_observer)/resources/disturbance_observer_$(arg mav_name).yaml"/>
      <!-- <rosparam file="$(find mav_linear_mpc)/resources/disturbance_observer_rpyrate_thrust.yaml"/> -->
      <param name="verbose" value="false" />
      <param name="use_rc_teleop" value="false" />
      <param name="reference_frame" value="odom" />
    </node>

    <node name="PID_attitude_controller" pkg="mav_lowlevel_attitude_controller" type="mav_pid_attitude_controller_node" respawn="true" clear_params="true" output="screen">
      <remap from="odometry" to="robot_fuse/odom" />
      <rosparam file="$(find mav_lowlevel_attitude_controller)/resources/PID_attitude_$(arg mav_name).yaml" />
    </node>


      <!-- <node name="trajectory_sampler" pkg="mav_trajectory_generation_ros" type="trajectory_sampler_node" output="screen">
      <param name="publish_whole_trajectory" value="true"/>
      <remap from="path_segments" to="trajectory"/>
    </node> -->
  </group>
</launch>
